Index: src/main/java/bds/javafx/data/EmployeeRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package bds.javafx.data;\r\n\r\nimport bds.javafx.api.*;\r\nimport bds.javafx.exceptions.DataAccessException;\r\nimport bds.javafx.config.DataSourceConfig;\r\n\r\n\r\nimport java.sql.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class EmployeeRepository {\r\n\r\n    public EmployeeAuthView findEmployeeByEmail(String email) {\r\n        try (Connection connection = DataSourceConfig.getConnection();\r\n             PreparedStatement preparedStatement = connection.prepareStatement(\r\n                     \"SELECT email, pwd\" +\r\n                             \" FROM employee e\" +\r\n                             \" WHERE e.email = ?\")\r\n        ) {\r\n            preparedStatement.setString(1, email);\r\n            try (ResultSet resultSet = preparedStatement.executeQuery()) {\r\n                if (resultSet.next()) {\r\n                    return mapToEmployeeAuth(resultSet);\r\n                }\r\n            }\r\n        } catch (SQLException e) {\r\n            throw new DataAccessException(\"Find employee by ID with addresses failed.\", e);\r\n        }\r\n        return null;\r\n    }\r\n    public List<EmployeeBasicView> getEmployeesBasicView() {\r\n        try (Connection connection = DataSourceConfig.getConnection();\r\n             PreparedStatement preparedStatement = connection.prepareStatement(\r\n                     \"SELECT e.employee_id, e.first_name, e.surname, e.email, b.building_name FROM employee e LEFT JOIN building b ON e.building_id = b.building_id \");\r\n             ResultSet resultSet = preparedStatement.executeQuery()) {\r\n            List<EmployeeBasicView> employeeBasicViews = new ArrayList<>();\r\n            while (resultSet.next()) {\r\n                employeeBasicViews.add(mapToEmployeeBasicView(resultSet));\r\n            }\r\n            return employeeBasicViews;\r\n        } catch (SQLException e) {\r\n            throw new DataAccessException(\"Employee basic view could not be loaded.\", e);\r\n        }\r\n    }\r\n   /* public List<EmployeeBasicView> findAll() {\r\n        try (Connection connection = DataSourceConfig.getConnection();\r\n             PreparedStatement preparedStatement = connection.prepareStatement(\r\n                     \"SELECT employee_id, first_name, surname, first_name, surname, email, building_id FROM employee\");\r\n             ResultSet resultSet = preparedStatement.executeQuery()) {\r\n            List<EmployeeBasicView> employees = new ArrayList<>();\r\n            while (resultSet.next()) {\r\n                employees.add(mapToEmployeeBasicView(resultSet));\r\n            }\r\n            return employees;\r\n        } catch (SQLException e) {\r\n            throw new DataAccessException(\"Find all users SQL failed.\", e);\r\n        }\r\n    }*/\r\n    public EmployeeDetailView findEmployeeDetailedView(Long employeeId) {\r\n        try (Connection connection = DataSourceConfig.getConnection();\r\n             PreparedStatement preparedStatement = connection.prepareStatement(\r\n                     \"SELECT e.employee_id, first_name, surname, email, building_name, job_type,salary,\" +\r\n                        \"contract_expiration, address_type, city, street, street_number, zip_code\" +\r\n                             \"FROM employee e LEFT JOIN building b ON e.building_id = b.building_id \" +\r\n                             \"LEFT JOIN employee_has_contract ehc ON ehc.employee_id = e.employee_ID\" +\r\n                             \"LEFT JOIN job j ON j.job_id = ehc.job_id\" +\r\n                             \"LEFT JOIN employee_has_address eha ON eha.employee_id = e.employee_ID\" +\r\n                             \"LEFT JOIN address a ON a.address_id = eha.address_id\"+\r\n                             \" WHERE e.employee_id = ?\")\r\n        ) {\r\n            preparedStatement.setLong(1, employeeId);\r\n            try (ResultSet resultSet = preparedStatement.executeQuery()) {\r\n                if (resultSet.next()) {\r\n                    return mapToEmployeeDetailView(resultSet);\r\n                }\r\n            }\r\n        } catch (SQLException e) {\r\n            throw new DataAccessException(\"Find employee by ID with addresses failed.\", e);\r\n        }\r\n        return null;\r\n    }\r\n    public void editEmployee(EmployeeEditView employeeEditView) {\r\n        String insertPersonSQL = \"UPDATE employee e SET email = ?, first_name = ?, surname = ?, building_name = ? WHERE e.employee = ?\";\r\n        String checkIfExists = \"SELECT email FROM employee e WHERE e.employee_id = ?\";\r\n        try (Connection connection = DataSourceConfig.getConnection();\r\n             // would be beneficial if I will return the created entity back\r\n             PreparedStatement preparedStatement = connection.prepareStatement(insertPersonSQL, Statement.RETURN_GENERATED_KEYS)) {\r\n            // set prepared statement variables\r\n            preparedStatement.setString(1, employeeEditView.getEmail());\r\n            preparedStatement.setString(2, employeeEditView.getFirstName());\r\n            preparedStatement.setString(3, employeeEditView.getBuilding());\r\n            preparedStatement.setString(4, employeeEditView.getSurname());\r\n            preparedStatement.setLong(5, employeeEditView.getId());\r\n\r\n            try {\r\n                // TODO set connection autocommit to false\r\n                connection.setAutoCommit(false);\r\n                try (PreparedStatement ps = connection.prepareStatement(checkIfExists, Statement.RETURN_GENERATED_KEYS)) {\r\n                    ps.setLong(1, employeeEditView.getId());\r\n                    ps.execute();\r\n                } catch (SQLException e) {\r\n                    throw new DataAccessException(\"This employee for edit do not exists.\");\r\n                }\r\n\r\n                int affectedRows = preparedStatement.executeUpdate();\r\n\r\n                if (affectedRows == 0) {\r\n                    throw new DataAccessException(\"Creating employee failed, no rows affected.\");\r\n                }\r\n                connection.commit();\r\n            } catch (SQLException e) {\r\n                connection.rollback();\r\n            } finally {\r\n                connection.setAutoCommit(true);\r\n            }\r\n        } catch (SQLException e) {\r\n            throw new DataAccessException(\"Creating employee failed operation on the database failed.\");\r\n        }\r\n    }\r\n\r\n    private EmployeeAuthView mapToEmployeeAuth(ResultSet rs) throws SQLException {\r\n        EmployeeAuthView employee = new EmployeeAuthView();\r\n        employee.setEmail(rs.getString(\"email\"));\r\n        employee.setPassword(rs.getString(\"pwd\"));\r\n        return employee;\r\n    }\r\n\r\n    private EmployeeBasicView mapToEmployeeBasicView(ResultSet rs) throws SQLException {\r\n        EmployeeBasicView employeeBasicView = new EmployeeBasicView();\r\n        employeeBasicView.setEmployeeId(rs.getLong(\"employee_id\"));\r\n        employeeBasicView.setFirstName(rs.getString(\"first_name\"));\r\n        employeeBasicView.setSurname(rs.getString(\"surname\"));\r\n        employeeBasicView.setEmail(rs.getString(\"email\"));\r\n        employeeBasicView.setBuilding(rs.getString(\"building_name\"));\r\n        return employeeBasicView;\r\n    }\r\n    private EmployeeDetailView mapToEmployeeDetailView(ResultSet rs) throws SQLException {\r\n        EmployeeDetailView employeeDetailView = new EmployeeDetailView();\r\n        employeeDetailView.setEmployeeId(rs.getLong(\"employee_id\"));\r\n        employeeDetailView.setEmail(rs.getString(\"email\"));\r\n        employeeDetailView.setFirstName(rs.getString(\"first_name\"));\r\n        employeeDetailView.setSurname(rs.getString(\"surname\"));\r\n        employeeDetailView.setBuilding(rs.getString(\"building_name\"));\r\n        employeeDetailView.setCity(rs.getString(\"city\"));\r\n        employeeDetailView.setSalary(rs.getLong(\"salary\"));\r\n        employeeDetailView.setContractExpiration(rs.getString(\"contract_expiration\"));\r\n        employeeDetailView.setAddressType(rs.getString(\"address_type\"));\r\n        employeeDetailView.setJobType(rs.getString(\"job_type\"));\r\n        employeeDetailView.setStreet(rs.getString(\"street\"));\r\n        employeeDetailView.setStreetNumber(rs.getLong(\"street_number\"));\r\n        employeeDetailView.setZipCode(rs.getLong(\"zip_code\"));\r\n        return employeeDetailView;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bds/javafx/data/EmployeeRepository.java b/src/main/java/bds/javafx/data/EmployeeRepository.java
--- a/src/main/java/bds/javafx/data/EmployeeRepository.java	
+++ b/src/main/java/bds/javafx/data/EmployeeRepository.java	
@@ -60,16 +60,19 @@
     public EmployeeDetailView findEmployeeDetailedView(Long employeeId) {
         try (Connection connection = DataSourceConfig.getConnection();
              PreparedStatement preparedStatement = connection.prepareStatement(
+                 /*    "SELECT e.employee_id, e.first_name, e.surname, e.email, b.building_name FROM employee e" +
+                             " LEFT JOIN building b ON e.building_id = b.building_id WHERE e.employee_id = ?")*/
                      "SELECT e.employee_id, first_name, surname, email, building_name, job_type,salary," +
                         "contract_expiration, address_type, city, street, street_number, zip_code" +
-                             "FROM employee e LEFT JOIN building b ON e.building_id = b.building_id " +
-                             "LEFT JOIN employee_has_contract ehc ON ehc.employee_id = e.employee_ID" +
-                             "LEFT JOIN job j ON j.job_id = ehc.job_id" +
-                             "LEFT JOIN employee_has_address eha ON eha.employee_id = e.employee_ID" +
-                             "LEFT JOIN address a ON a.address_id = eha.address_id"+
+                             " FROM employee e LEFT JOIN building b ON e.building_id = b.building_id " +
+                             " LEFT JOIN employee_has_contract ehc ON ehc.employee_id = e.employee_id" +
+                             " LEFT JOIN job j ON j.job_id = ehc.job_id" +
+                             " LEFT JOIN employee_has_address eha ON eha.employee_id = e.employee_id" +
+                             " LEFT JOIN address a ON a.address_id = eha.address_id"+
                              " WHERE e.employee_id = ?")
         ) {
             preparedStatement.setLong(1, employeeId);
+            System.out.println(employeeId);
             try (ResultSet resultSet = preparedStatement.executeQuery()) {
                 if (resultSet.next()) {
                     return mapToEmployeeDetailView(resultSet);
@@ -81,20 +84,19 @@
         return null;
     }
     public void editEmployee(EmployeeEditView employeeEditView) {
-        String insertPersonSQL = "UPDATE employee e SET email = ?, first_name = ?, surname = ?, building_name = ? WHERE e.employee = ?";
+        String insertEmployeeSQL = "UPDATE employee e SET email = ?, first_name = ?, surname = ? WHERE e.employee_id = ?";
         String checkIfExists = "SELECT email FROM employee e WHERE e.employee_id = ?";
         try (Connection connection = DataSourceConfig.getConnection();
              // would be beneficial if I will return the created entity back
-             PreparedStatement preparedStatement = connection.prepareStatement(insertPersonSQL, Statement.RETURN_GENERATED_KEYS)) {
+             PreparedStatement preparedStatement = connection.prepareStatement(insertEmployeeSQL, Statement.RETURN_GENERATED_KEYS)) {
             // set prepared statement variables
             preparedStatement.setString(1, employeeEditView.getEmail());
             preparedStatement.setString(2, employeeEditView.getFirstName());
-            preparedStatement.setString(3, employeeEditView.getBuilding());
-            preparedStatement.setString(4, employeeEditView.getSurname());
-            preparedStatement.setLong(5, employeeEditView.getId());
+            preparedStatement.setString(3, employeeEditView.getSurname());
+           // preparedStatement.setString(3, employeeEditView.getBuilding());
+            preparedStatement.setLong(4, employeeEditView.getId());
 
             try {
-                // TODO set connection autocommit to false
                 connection.setAutoCommit(false);
                 try (PreparedStatement ps = connection.prepareStatement(checkIfExists, Statement.RETURN_GENERATED_KEYS)) {
                     ps.setLong(1, employeeEditView.getId());
Index: src/main/resources/bds.javafx/fxml/EmployeeDetailView.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.*?>\r\n<?import javafx.scene.layout.*?>\r\n<?import javafx.scene.text.*?>\r\n\r\n<AnchorPane prefHeight=\"400.0\" prefWidth=\"600.0\" xmlns=\"http://javafx.com/javafx/11.0.2\" xmlns:fx=\"http://javafx.com/fxml/1\"> <!--fx:controller=\"bds.javafx.controllers.EmployeesDetailViewController\"-->\r\n   <children>\r\n      <GridPane prefHeight=\"400.0\" prefWidth=\"600.0\" AnchorPane.bottomAnchor=\"0.0\" AnchorPane.leftAnchor=\"0.0\" AnchorPane.rightAnchor=\"0.0\" AnchorPane.topAnchor=\"0.0\">\r\n        <columnConstraints>\r\n          <ColumnConstraints hgrow=\"SOMETIMES\" minWidth=\"10.0\" prefWidth=\"100.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"280.0\" minWidth=\"10.0\" prefWidth=\"280.0\" />\r\n          <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"195.0\" minWidth=\"10.0\" prefWidth=\"120.0\" />\r\n        </columnConstraints>\r\n        <rowConstraints>\r\n            <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\r\n          <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\r\n          <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\r\n          <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\r\n        </rowConstraints>\r\n         <children>\r\n            <TextField fx:id=\"jobtypeTextField\" prefHeight=\"47.0\" prefWidth=\"150.0\" />\r\n            <TextField fx:id=\"streetTextField\" GridPane.rowIndex=\"1\" />\r\n            <TextField fx:id=\"streetnumberTextField\" GridPane.rowIndex=\"1\" />\r\n            <Label text=\"salary\" GridPane.rowIndex=\"1\" />\r\n            <Label text=\"city\" GridPane.rowIndex=\"1\" />\r\n            <Label text=\"zip code\" GridPane.rowIndex=\"1\" />\r\n            <Label text=\"street number\" GridPane.rowIndex=\"1\" />\r\n            <Label text=\"street\" GridPane.rowIndex=\"1\" />\r\n            <Label text=\"address type\" GridPane.rowIndex=\"1\" />\r\n            <Label text=\"contract expiration\" GridPane.rowIndex=\"1\" />\r\n            <Label text=\"job type\" GridPane.rowIndex=\"1\" />\r\n            <Label text=\"building\" GridPane.rowIndex=\"1\" />\r\n            <Label text=\"email\" GridPane.rowIndex=\"1\" />\r\n            <Label text=\"surname\" GridPane.rowIndex=\"1\" />\r\n            <Label text=\"ID\" GridPane.rowIndex=\"1\" />\r\n            <Label text=\"first name\" GridPane.rowIndex=\"1\" />\r\n            <TextField fx:id=\"addresstypeTextField\" GridPane.rowIndex=\"1\" />\r\n            <Label text=\"Employee´s details\" GridPane.columnIndex=\"1\">\r\n               <font>\r\n                  <Font name=\"System Bold\" size=\"27.0\" />\r\n               </font>\r\n            </Label>\r\n            <TextField fx:id=\"buildingTextField\" GridPane.rowIndex=\"2\" />\r\n            <TextField fx:id=\"zipcodeTextField\" />\r\n            <TextField fx:id=\"cityTextField\" />\r\n            <TextField fx:id=\"idTextField\" prefHeight=\"25.0\" prefWidth=\"53.0\" />\r\n            <TextField fx:id=\"emailTextField\" />\r\n            <TextField fx:id=\"firstnameTextField\" />\r\n            <TextField fx:id=\"surnameTextField\" />\r\n            <TextField fx:id=\"salaryTextField\" />\r\n            <TextField fx:id=\"contractexpirationTextField\" />\r\n         </children>\r\n      </GridPane>\r\n   </children>\r\n</AnchorPane>\r\n
===================================================================
diff --git a/src/main/resources/bds.javafx/fxml/EmployeeDetailView.fxml b/src/main/resources/bds.javafx/fxml/EmployeeDetailView.fxml
--- a/src/main/resources/bds.javafx/fxml/EmployeeDetailView.fxml	
+++ b/src/main/resources/bds.javafx/fxml/EmployeeDetailView.fxml	
@@ -4,53 +4,38 @@
 <?import javafx.scene.layout.*?>
 <?import javafx.scene.text.*?>
 
-<AnchorPane prefHeight="400.0" prefWidth="600.0" xmlns="http://javafx.com/javafx/11.0.2" xmlns:fx="http://javafx.com/fxml/1"> <!--fx:controller="bds.javafx.controllers.EmployeesDetailViewController"-->
-   <children>
-      <GridPane prefHeight="400.0" prefWidth="600.0" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0">
-        <columnConstraints>
-          <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0" />
-            <ColumnConstraints hgrow="SOMETIMES" maxWidth="280.0" minWidth="10.0" prefWidth="280.0" />
-          <ColumnConstraints hgrow="SOMETIMES" maxWidth="195.0" minWidth="10.0" prefWidth="120.0" />
-        </columnConstraints>
-        <rowConstraints>
-            <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
-          <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
-          <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
-          <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
-        </rowConstraints>
+<AnchorPane prefHeight="600.0" prefWidth="544.0" xmlns="http://javafx.com/javafx/11.0.2" xmlns:fx="http://javafx.com/fxml/1"> <!--fx:controller="bds.javafx.controllers.EmployeesDetailViewController"-->
          <children>
-            <TextField fx:id="jobtypeTextField" prefHeight="47.0" prefWidth="150.0" />
-            <TextField fx:id="streetTextField" GridPane.rowIndex="1" />
-            <TextField fx:id="streetnumberTextField" GridPane.rowIndex="1" />
-            <Label text="salary" GridPane.rowIndex="1" />
-            <Label text="city" GridPane.rowIndex="1" />
-            <Label text="zip code" GridPane.rowIndex="1" />
-            <Label text="street number" GridPane.rowIndex="1" />
-            <Label text="street" GridPane.rowIndex="1" />
-            <Label text="address type" GridPane.rowIndex="1" />
-            <Label text="contract expiration" GridPane.rowIndex="1" />
-            <Label text="job type" GridPane.rowIndex="1" />
-            <Label text="building" GridPane.rowIndex="1" />
-            <Label text="email" GridPane.rowIndex="1" />
-            <Label text="surname" GridPane.rowIndex="1" />
-            <Label text="ID" GridPane.rowIndex="1" />
-            <Label text="first name" GridPane.rowIndex="1" />
-            <TextField fx:id="addresstypeTextField" GridPane.rowIndex="1" />
-            <Label text="Employee´s details" GridPane.columnIndex="1">
+            <TextField fx:id="jobtypeTextField" alignment="CENTER" layoutX="57.0" layoutY="333.0" prefHeight="25.0" prefWidth="179.0" />
+            <TextField fx:id="streetTextField" alignment="CENTER" layoutX="58.0" layoutY="465.0" prefHeight="25.0" prefWidth="179.0" GridPane.rowIndex="1" />
+            <TextField fx:id="streetnumberTextField" alignment="CENTER" layoutX="309.0" layoutY="465.0" prefHeight="25.0" prefWidth="179.0" GridPane.rowIndex="1" />
+            <Label layoutX="383.0" layoutY="308.0" text="salary" GridPane.rowIndex="1" />
+            <Label layoutX="389.0" layoutY="375.0" text="city" GridPane.rowIndex="1" />
+            <Label layoutX="125.0" layoutY="505.0" text="zip code" GridPane.rowIndex="1" />
+            <Label layoutX="361.0" layoutY="442.0" text="street number" GridPane.rowIndex="1" />
+            <Label layoutX="132.0" layoutY="442.0" text="street" GridPane.rowIndex="1" />
+            <Label layoutX="364.0" layoutY="505.0" text="address type" GridPane.rowIndex="1" />
+            <Label layoutX="97.0" layoutY="375.0" text="contract expiration" GridPane.rowIndex="1" />
+            <Label layoutX="125.0" layoutY="308.0" text="job type" GridPane.rowIndex="1" />
+            <Label layoutX="376.0" layoutY="241.0" text="building" GridPane.rowIndex="1" />
+            <Label layoutX="132.0" layoutY="241.0" text="email" GridPane.rowIndex="1" />
+            <Label layoutX="375.0" layoutY="170.0" text="surname" GridPane.rowIndex="1" />
+            <Label layoutX="257.0" layoutY="117.0" text="ID" GridPane.rowIndex="1" />
+            <Label layoutX="120.0" layoutY="170.0" text="first name" GridPane.rowIndex="1" />
+            <TextField fx:id="addresstypeTextField" alignment="CENTER" layoutX="309.0" layoutY="528.0" prefHeight="25.0" prefWidth="179.0" GridPane.rowIndex="1" />
+            <Label alignment="TOP_LEFT" contentDisplay="BOTTOM" layoutX="153.0" layoutY="50.0" prefHeight="39.0" prefWidth="238.0" text="Employee´s details" textAlignment="CENTER" GridPane.columnIndex="1">
                <font>
                   <Font name="System Bold" size="27.0" />
                </font>
             </Label>
-            <TextField fx:id="buildingTextField" GridPane.rowIndex="2" />
-            <TextField fx:id="zipcodeTextField" />
-            <TextField fx:id="cityTextField" />
-            <TextField fx:id="idTextField" prefHeight="25.0" prefWidth="53.0" />
-            <TextField fx:id="emailTextField" />
-            <TextField fx:id="firstnameTextField" />
-            <TextField fx:id="surnameTextField" />
-            <TextField fx:id="salaryTextField" />
-            <TextField fx:id="contractexpirationTextField" />
-         </children>
-      </GridPane>
+            <TextField fx:id="buildingTextField" alignment="CENTER" layoutX="309.0" layoutY="266.0" prefHeight="25.0" prefWidth="179.0" GridPane.rowIndex="2" />
+            <TextField fx:id="zipcodeTextField" alignment="CENTER" layoutX="58.0" layoutY="528.0" prefHeight="25.0" prefWidth="179.0" />
+            <TextField fx:id="cityTextField" alignment="CENTER" layoutX="309.0" layoutY="401.0" prefHeight="25.0" prefWidth="179.0" />
+            <TextField fx:id="idTextField" alignment="CENTER" layoutX="236.0" layoutY="141.0" prefHeight="25.0" prefWidth="53.0" />
+            <TextField fx:id="emailTextField" alignment="CENTER" layoutX="57.0" layoutY="266.0" prefHeight="25.0" prefWidth="179.0" />
+            <TextField fx:id="firstnameTextField" alignment="CENTER" layoutX="57.0" layoutY="195.0" prefHeight="25.0" prefWidth="179.0" />
+            <TextField fx:id="surnameTextField" alignment="CENTER" layoutX="309.0" layoutY="195.0" prefHeight="25.0" prefWidth="179.0" />
+            <TextField fx:id="salaryTextField" alignment="CENTER" layoutX="309.0" layoutY="333.0" prefHeight="25.0" prefWidth="179.0" />
+            <TextField fx:id="contractexpirationTextField" alignment="CENTER" layoutX="58.0" layoutY="401.0" prefHeight="25.0" prefWidth="179.0" />
    </children>
 </AnchorPane>
